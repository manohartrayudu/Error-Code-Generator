****************************************************************************************************************

                                    ERROR CODE GENERTION PROGRAM
                                              METHOD 1
                             (executing the code externally - using a c++ file)



****************************************************************************************************************


Sub GET_ERROR_CODE()
Dim fileReader As String
Dim RetVal
Dim str_out As String
Dim exe_path As String
Dim myFile As String, text As String, textline As String
Dim myFile2 As String
Dim rng As Range, cell As Range
Dim str(4) As String
Dim i As Integer
Dim j As Integer
Dim row_start As Integer
Dim row_end As Integer
Dim col_start As Integer
Dim col_end As Integer
Dim count As Integer


Dim fso As Object, ts As Object
Set fso = CreateObject("Scripting.FileSystemObject")

Set ts = fso.CreateTextFile("C:\Users\kvkanumuri\Desktop\macro\file_A.h")
ts.WriteLine "#include <Common_Definitions.h>"
ts.WriteLine "namespace fdir_ident_t"
ts.WriteLine "{"
ts.WriteLine "enum fdir_events_t{"
Set ts1 = fso.CreateTextFile("C:\Users\kvkanumuri\Desktop\macro\file_B.h")
ts1.WriteLine "#include <file_A.h>"
ts1.WriteLine "Uint32_t error_code_and_action[count][2]={"


Dim i2 As Integer
Dim j2 As Integer
Dim num2 As Integer
Dim index As Integer
Dim row_start2 As Integer
Dim row_end2 As Integer
Dim col_start2 As Integer
Dim col_end2 As Integer
Dim str2(3) As Integer
Dim str_out2 As String

Dim k As Integer
Dim h As Integer
Dim t As Integer


myFile = "C:\Users\kvkanumuri\Documents\error_code_input.txt"



row_start = 10
row_end = 16

col_start = 1
col_end = 4

col_start2 = 6
col_end2 = 8

count = 0
num2 = 0

For i = row_start To row_end
    For j = col_start To col_end
        str(col_end - 1 - j + 1) = Cells(i, j).Value
    Next j

    str_out = " " & str(0) & "," & str(1) & "," & str(2) & "," & str(3)


    exe_path = "C:\Users\kvkanumuri\Desktop\macro\h.exe"
    exe_path = exe_path & " "
    exe_path = exe_path & str_out

    RetVal = Shell(exe_path, 2)


    'Application.Wait (Now + TimeValue("0:00:1"))
    Application.Wait (Now + 0.00001)
'    For k = 0 To 500
'        For h = 0 To 100
'            For t = 0 To 100
'            Next t
'        Next h
'    Next k


    Open myFile For Input As #1
    'text = ""
    Do Until EOF(1)
        Line Input #1, textline
        text = text & textline
    Loop

    Close #1

    Cells(i, 9).Value = text


    index = 0
    For j2 = col_start2 To col_end2
        str2(index) = Cells(i, j2).Value
        index = index + 1
    Next j2

    num2 = (str2(0) + 2 * str2(1) + 4 * str2(2))
    str_out2 = "0x0000000" & Hex(num2)
    Cells(i, 10).Value = str_out2


    ts.WriteLine Cells(i, 5) & " " & "=" & " " & count & ","
    ts1.WriteLine "{" & Cells(i, 9) & " " & "," & " " & Cells(i, 10) & "}," & "//" & Cells(i, 5)
    text = ""
    count = count + 1


Next i

ts.WriteLine "};"
ts.WriteLine "}"
ts.WriteLine "const Uint32_t count=" & count & ";"
ts.Close
ts1.WriteLine "};"
ts1.Close




End Sub


****************************************************************************************************************

                                    ERROR CODE GENERTION PROGRAM
                                              METHOD 2
                                     (using array manipulations)

SUMMARY:
                               [.] Used array to arrange error_codes
                               [.] Exponential improvement in execution time
                               [X] New fields cannot be added easily

****************************************************************************************************************


Sub generate_error_code()
Dim event_type
Dim criticality
Dim code
Dim code_final As String
Dim lru
Dim error_code
Dim arr_error1
Dim arr_error2
Dim arr_error_final
Dim row_start As Integer
Dim row_end As Integer

Dim col_start As Integer
Dim col_end As Integer
Dim i, j As Integer

Dim num
Dim count As Integer


Dim fso As Object, ts As Object
Set fso = CreateObject("Scripting.FileSystemObject")

Set ts = fso.CreateTextFile("Events_Definitions.h")
ts.WriteLine "#include <Common_Definitions.h>"
ts.WriteLine "namespace fdir_ident_t"
ts.WriteLine "{"
ts.WriteLine "enum fdir_events_t{"
Set ts1 = fso.CreateTextFile("Map_Actions.h")
ts1.WriteLine "#include <Events_Definitions.h>"
ts1.WriteLine "Uint32_t error_code_and_action[count][2]={"



row_start = 10
row_end = 15



For i = row_start To row_end
        '*************************LRU part****************************
        If Cells(i, 1).Value = "ADU" Then
            lru = Hex(1)
        ElseIf Cells(i, 1).Value = "AHRS" Then
            lru = Hex(2)
        ElseIf Cells(i, 1).Value = "GPS" Then
            lru = Hex(3)
        ElseIf Cells(i, 1).Value = "ELEVATOR" Then
            lru = Hex(4)
        ElseIf Cells(i, 1).Value = "AILERON" Then
            lru = Hex(5)
        ElseIf Cells(i, 1).Value = "RUDDER" Then
            lru = Hex(6)
        ElseIf Cells(i, 1).Value = "MSAP" Then
            lru = Hex(7)
        ElseIf Cells(i, 1).Value = "EMS" Then
            lru = Hex(8)
        ElseIf Cells(i, 1).Value = "ADHRS" Then
            lru = Hex(9)
        End If
        '**************************************************************

        '*************************Code part****************************
        code = Hex(Cells(i, 2).Value)
        If Len(code) <= 5 Then
            If Len(code) = 1 Then
                code_final = "0000" & code
            ElseIf Len(code) = 2 Then
                code_final = "000" & code
            ElseIf Len(code) = 3 Then
                code_final = "00" & code
            ElseIf Len(code) = 4 Then
                code_final = "0" & code
            ElseIf Len(code) = 5 Then
                code_final = "" & code
            End If
        End If
        '**************************************************************

        '**********************Criticality Part************************
        If Cells(i, 3).Value = "All_well" Then
            criticality = Hex(0)
        ElseIf Cells(i, 3).Value = "Major" Then
            criticality = Hex(1)
        ElseIf Cells(i, 3).Value = "Hazardous" Then
            criticality = Hex(2)
        ElseIf Cells(i, 3).Value = "Catastrophic" Then
         criticality = Hex(3)
        End If
        '**************************************************************

        '*********************Events Part******************************
        If Cells(i, 4).Value = "M-event" Then
            event_type = Hex(1)
        ElseIf Cells(i, 4).Value = "I-event" Then
            event_type = Hex(2)
        ElseIf Cells(i, 4).Value = "R-event" Then
            event_type = Hex(4)
        End If
        '**************************************************************

        '********************FDIR ERROR CODE***************************
        arr_error1 = Array(lru, code_final, criticality, event_type)
        arr_error2 = Join(arr_error1, "")
        arr_error_final = "0x" & arr_error2
        Cells(i, 9).Value = arr_error_final
        arr_error_final = ""
        '**************************************************************

        '********************FDIR ACTION CODE**************************
        num = Hex(Cells(i, 6).Value + (2 * Cells(i, 7).Value) + (4 * Cells(i, 8).Value))
        Cells(i, 10).Value = "0x0000000" & num
        '**************************************************************



        ts.WriteLine Cells(i, 5) & " " & "=" & " " & count & ","
        ts1.WriteLine "{" & Cells(i, 9) & " " & "," & " " & Cells(i, 10) & "}," & "//" & Cells(i, 5)
        text = ""
        count = count + 1

Next i

ts.WriteLine "};"
ts.WriteLine "}"
ts.WriteLine "const Uint32_t count=" & count & ";"
ts.Close
ts1.WriteLine "};"
ts1.Close

'Dim a, b, c
'a = 4
'b = 2^4
'
'c = a * b

Dim a, b As Integer
Dim c
a = 12
b = Application.WorksheetFunction.Bitlshift(a, 4)
c = Hex(a)

Cells(35, 1).Value = a
Cells(36, 1).Value = b
Cells(37, 1).Value = c



End Sub





'****************************************************************************************************************

                                    'ERROR CODE GENERTION PROGRAM
                                               'METHOD 3
                                           '(using bit shifts)
                                           
                                           
                                               'SUMMARY:
                            '[.] Added two new fields "SYSTEM" and "SUBSYSTEM"
                            '[.] Alloted bits accordingly
                            '[.] Used left bit shift to arrange the final error_code
                            '[X] Execution time is slightly more as compared to METHOD 2
                            
                            
                                                'NOTE:
                            '[.] Temporary error_names are hard coded based on LRU type
                                                

'****************************************************************************************************************



Sub generate_error_code()
Dim event_type
Dim criticality
Dim code
Dim code_final
Dim criticality_final
Dim lru
Dim lru_final
Dim error_code
Dim row_start As Integer
Dim row_end As Integer
Dim sub_system
Dim sub_system_final
Dim system_code
Dim system_code_final

Dim col_start As Integer
Dim col_end As Integer
Dim i, j As Integer

Dim num
Dim count As Integer


Dim fso As Object, ts As Object
Set fso = CreateObject("Scripting.FileSystemObject")

Set ts = fso.CreateTextFile("Events_Definitions.h")
ts.WriteLine "#include <Common_Definitions.h>"
ts.WriteLine "namespace fdir_ident_t"
ts.WriteLine "{"
ts.WriteLine "enum fdir_events_t{"
Set ts1 = fso.CreateTextFile("Map_Actions.h")
ts1.WriteLine "#include <Events_Definitions.h>"
ts1.WriteLine "Uint32_t error_code_and_action[count][2]={"


row_start = 10
row_end = 33


For i = row_start To row_end


        '*********************Events Part******************************
        If Cells(i, 6).Value = "M-event" Then
            event_type = 1
        ElseIf Cells(i, 6).Value = "I-event" Then
            event_type = 2
        ElseIf Cells(i, 6).Value = "R-event" Then
            event_type = 4
        End If
        error_code = error_code Or event_type
        '**************************************************************

        '**********************Criticality Part************************
        If Cells(i, 5).Value = "All_well" Then
            criticality = 0
        ElseIf Cells(i, 5).Value = "Major" Then
            criticality = 1
        ElseIf Cells(i, 5).Value = "Hazardous" Then
            criticality = 2
        ElseIf Cells(i, 5).Value = "Catastrophic" Then
         criticality = 3
        End If
        criticality_final = Application.WorksheetFunction.Bitlshift(criticality, 4)
        error_code = error_code Or criticality_final
        '**************************************************************

        '*************************Code part****************************
        code = Cells(i, 4).Value
        code_final = Application.WorksheetFunction.Bitlshift(code, 8)
        error_code = error_code Or code_final
        '**************************************************************


        '*************************LRU part****************************
        '(contains dummy error names)
        If Cells(i, 3).Value = "ADU" Then
            lru = 1
            Cells(i, 7).Value = "eve_bit_ADU_loss_e"
        ElseIf Cells(i, 3).Value = "AHRS" Then
            lru = 2
            Cells(i, 7).Value = "eve_AHRS1_align_fail_e"
        ElseIf Cells(i, 3).Value = "GPS" Then
            lru = 3
            Cells(i, 7).Value = "eve_GPS_checksum_fail_e"
        ElseIf Cells(i, 3).Value = "ELEVATOR" Then
            lru = 4
            Cells(i, 7).Value = "eve_ELE_degraded_mode_e"
        ElseIf Cells(i, 3).Value = "AILERON" Then
            lru = 5
            Cells(i, 7).Value = "eve_AIL_degraded_mode_e"
        ElseIf Cells(i, 3).Value = "RUDDER" Then
            lru = 6
            Cells(i, 7).Value = "eve_RUD_angle_upper_range_e"
        ElseIf Cells(i, 3).Value = "MSAP" Then
            lru = 7
            Cells(i, 7).Value = "eve_bit_ADU_loss_e"
        ElseIf Cells(i, 3).Value = "EMS" Then
            lru = 8
            Cells(i, 7).Value = "eve_bit_EMS_packet_ID_error_e"
        ElseIf Cells(i, 3).Value = "ADAHRS" Then
            lru = 9
            Cells(i, 7).Value = "eve_ADAHRS_comm_loss_e"
        End If

        lru_final = Application.WorksheetFunction.Bitlshift(lru, 16)
        error_code = error_code Or lru_final
        '**************************************************************
        
        
        '*************************SUB SYSTEM PART**********************
        If Cells(i, 2).Value = "AFCS" Then
            sub_system = 1
        End If
        
        sub_system_final = Application.WorksheetFunction.Bitlshift(sub_system, 26)
        error_code = error_code Or sub_system_final
        '**************************************************************
        
        
        '*************************SYSTEM PART**************************
        If Cells(i, 1).Value = "MALE" Then
            system_code = 1
        ElseIf Cells(i, 1).Value = "FEMALE" Then
            system_code = 2
        End If
        
        system_code_final = Application.WorksheetFunction.Bitlshift(system_code, 29)
        error_code = error_code Or system_code_final
        '**************************************************************
        

        '********************FDIR ERROR CODE***************************
         Cells(i, 11).Value = "0x" & Hex(error_code)
        '**************************************************************
        
        error_code = 0

        '********************FDIR ACTION CODE**************************
        num = Hex(Cells(i, 8).Value + (2 * Cells(i, 9).Value) + (4 * Cells(i, 10).Value))
        Cells(i, 12).Value = "0x0000000" & num
        '**************************************************************


        ts.WriteLine Cells(i, 7) & " " & "=" & " " & count & ","
        ts1.WriteLine "{" & Cells(i, 11) & " " & "," & " " & Cells(i, 12) & "}," & "//" & Cells(i, 7)
        text = ""
        count = count + 1

Next i

ts.WriteLine "};"
ts.WriteLine "}"
ts.WriteLine "const Uint32_t count=" & count & ";"
ts.Close
ts1.WriteLine "};"
ts1.Close


'*******************SAMPLE TRY**************************
'Dim error, d, f
'Dim e
'error = error_code Or (1)
'd = Application.WorksheetFunction.Bitlshift(2, 4)
'error = error Or (d)
'codey = 999
'e = Application.WorksheetFunction.Bitlshift(codey, 8)
'error = error Or (e)
'f = Application.WorksheetFunction.Bitlshift(3, 28)
'error = error Or (f)
'
'Cells(4, 5).Value = "0x" & Hex(error)
'********************************************************
Cells(3, 7).Value = Hex(Cells(10, 4).Value)
'***************************************************



End Sub
